{"version":3,"sources":["./node_modules/rxjs/add/observable/of.js","./src/app/docs/docs-routing.module.ts","./src/app/docs/docs.module.ts","./src/app/docs/docs/docs.component.html","./src/app/docs/docs/docs.component.scss","./src/app/docs/docs/docs.component.ts"],"names":[],"mappings":"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","file":"docs.module.chunk.js","sourcesContent":["\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/of.js\n// module id = ./node_modules/rxjs/add/observable/of.js\n// module chunks = docs.module","import { DocsComponent } from './docs/docs.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [{\n  path: '',\n  component: DocsComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DocsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/docs/docs-routing.module.ts","import { SharedModule } from '../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DocsRoutingModule } from './docs-routing.module';\nimport { DocsComponent } from './docs/docs.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DocsRoutingModule,\n    SharedModule\n  ],\n  declarations: [DocsComponent]\n})\nexport class DocsModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/docs/docs.module.ts","module.exports = \"<div class=\\\"side-nav\\\">\\n  <mat-list>\\n    <a mat-list-item href=\\\"/docs#options\\\">Options</a>\\n    <a mat-list-item href=\\\"/docs#sourceOption\\\">sourceOption</a>\\n    <a mat-list-item href=\\\"/docs#metaObject\\\">metaObject</a>\\n    <a mat-list-item href=\\\"/docs#jsdoc\\\">jsdoc</a>\\n  </mat-list>\\n</div>\\n\\n<div class=\\\"content\\\">\\n\\n  <div class=\\\"input\\\">\\n\\n    <section id=\\\"options\\\">\\n      <h2 class=\\\"title\\\">Options</h2>\\n      <p>The initial options passed into the plugin</p>\\n\\n      <div class=\\\"table\\\">\\n        <table>\\n          <tr>\\n            <td>Name</td>\\n            <td>Type</td>\\n            <td>Description</td>\\n          </tr>\\n          <tr *ngFor=\\\"let option of options\\\">\\n            <td>{{option.name}}</td>\\n            <td>{{option.type}}</td>\\n            <td>{{option.description}}</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </section>\\n\\n    <section id=\\\"sourceOption\\\">\\n      <h2 class=\\\"title\\\">SourceOption</h2>\\n      <p>Options for each directory you would like to scan</p>\\n\\n      <div class=\\\"table\\\">\\n        <table>\\n          <tr>\\n            <td>Name</td>\\n            <td>Type</td>\\n            <td>Description</td>\\n          </tr>\\n          <tr *ngFor=\\\"let option of sourceOptions\\\">\\n            <td>{{option.name}}</td>\\n            <td>{{option.type}}</td>\\n            <td>{{option.description}}</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </section>\\n\\n  </div>\\n\\n  <div class=\\\"output\\\">\\n\\n    <section id=\\\"metaObject\\\">\\n      <h2 class=\\\"title\\\">metaObject</h2>\\n      <p>Options for each directory you would like to scan</p>\\n\\n      <div class=\\\"table\\\">\\n        <table>\\n          <tr>\\n            <td>Name</td>\\n            <td>Type</td>\\n            <td>Description</td>\\n          </tr>\\n          <tr *ngFor=\\\"let option of metaObjects\\\">\\n            <td>{{option.name}}</td>\\n            <td>{{option.type}}</td>\\n            <td>{{option.description}}</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </section>\\n\\n  </div>\\n\\n  <div class=\\\"doc\\\">\\n\\n    <section id=\\\"jsdoc\\\">\\n      <h2 class=\\\"title\\\">Source Comments parser</h2>\\n      <p>Example of a comment block you can place at the top of your file to parse your own comments into the styleguide</p>\\n\\n      <pre>\\n    {{'...\\\\r\\\\n\\\\r\\\\n      \\\\/**\\\\r\\\\n      * This component will show cast members from magyver and information about\\\\r\\\\n      * *\\\\r\\\\n      * **Example usage**\\\\r\\\\n      *\\\\r\\\\n      * ```html\\\\r\\\\n      * <sg-magyver-list\\\\r\\\\n      *        (itemClicked)=\\\\\\\"onItemSelected()\\\\\\\"\\\\r\\\\n      *        [castMembers]=\\\\\\\"list\\\\\\\">\\\\r\\\\n      * <\\\\/sg-magyver-list>\\\\r\\\\n      * ```\\\\r\\\\n      *\\\\r\\\\n      * @export\\\\r\\\\n      * @class MagyverListComponent\\\\r\\\\n      * @Input castMembers\\\\r\\\\n      * @implements {OnInit}\\\\r\\\\n      *\\\\/\\\\r\\\\n     @Component({\\\\r\\\\n       selector: \\\\'sg-magyver-list\\\\',\\\\r\\\\n       templateUrl: \\\\'.\\\\/magyver-list.component.html\\\\',\\\\r\\\\n       styleUrls: [\\\\'.\\\\/magyver-list.component.scss\\\\']\\\\r\\\\n     })\\\\r\\\\n     export class MagyverListComponent implements OnInit {\\\\r\\\\n\\\\r\\\\n      ...\\\\r\\\\n\\\\r\\\\n     };'}}\\n    </pre>\\n\\n      <p>See the output\\n        <a href=\\\"styleguide/components#magyverList\\\">here</a>\\n      </p>\\n    </section>\\n\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/docs/docs/docs.component.html\n// module id = ./src/app/docs/docs/docs.component.html\n// module chunks = docs.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".side-nav {\\n  background: #9068be;\\n  width: 200px; }\\n  .side-nav mat-list {\\n    position: fixed; }\\n  .side-nav a {\\n    text-decoration: none;\\n    color: #e1e8f0; }\\n    .side-nav a:hover {\\n      color: #6ed3cf; }\\n    .side-nav a.sub-item {\\n      display: none; }\\n      .side-nav a.sub-item.active {\\n        display: block; }\\n\\nmat-sidenav-container {\\n  height: 100%; }\\n\\n.content {\\n  padding: 30px;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1; }\\n\\nh1, h2, h3 {\\n  display: inline-block;\\n  margin: 0;\\n  padding: 5px 0 0;\\n  margin-bottom: 10px;\\n  border-bottom: solid 1px #e62739;\\n  color: #55595d; }\\n\\n.input, .output, .doc {\\n  padding: 10px;\\n  margin-bottom: 20px; }\\n\\n.input {\\n  background: rgba(230, 39, 57, 0.3); }\\n\\n.output {\\n  background: rgba(110, 211, 207, 0.3); }\\n\\ntable tr td {\\n  padding: 5px;\\n  border: solid 1px #55595d;\\n  font-size: 12px; }\\n\\nsection p {\\n  margin-top: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/docs/docs/docs.component.scss\n// module id = ./src/app/docs/docs/docs.component.scss\n// module chunks = docs.module","import { DataSource } from '@angular/cdk/collections';\nimport { Component, HostBinding } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nexport interface Element {\n  name: string;\n  type: string;\n  description: string;\n}\n\n@Component({\n  selector: 'sg-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.scss']\n})\nexport class DocsComponent {\n  @HostBinding('class.page-container') true;\n  displayedColumns = ['name', 'type', 'description'];\n\n  options: Element[] = [\n    { name: 'outputPath', type: 'String', description: 'path to the output of your styleguide' },\n    { name: 'sourceOptions', type: 'SourceOption[]', description: 'An array of Options for each folder source you would like to scan' },\n  ];\n\n  sourceOptions: Element[] = [\n    { name: 'name', type: 'string', description: 'path to the output of your styleguide' },\n    {\n      name: 'parseType',\n      type: 'parseType',\n      description: 'specify the contents of the folder, options are \"component\", \"pipe\", \"model\", \"service\" or \"directive\"'\n    },\n    { name: 'path', type: 'string', description: 'the root path of the folder you would like to scan' },\n    {\n      name: 'folderToIgnore',\n      type: 'string[]',\n      description: 'any sub folders or files you would like to ignore and not add to the output'\n    },\n    {\n      name: 'addMetaToArray',\n      type: 'boolean',\n      description: 'If checked, the meta objects will be output into an array that can be iterated, defaults off'\n    },\n  ];\n\n  metaObjects: Element[] = [\n    { name: 'id', type: 'String', description: 'path to the output of your styleguide' },\n    { name: 'title', type: 'string', description: 'An array of Options for each folder source you would like to scan' },\n    { name: 'description', type: 'string', description: 'A description taken from the comment block /** ... **/ of your comment' },\n    { name: 'properties', type: 'Property[]', description: 'A standard class property, key, type and decorator' },\n    { name: 'health', type: 'Health', description: 'An collection of variables that describe the targets health' },\n  ];\n}\n\n// name: string;\n// parseType: parseType;\n// path: string;\n// folderToIgnore: string[];\n// tagsToSelect: string[];\n// addMetaToArray: boolean;\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/docs/docs/docs.component.ts"],"sourceRoot":"webpack:///"}